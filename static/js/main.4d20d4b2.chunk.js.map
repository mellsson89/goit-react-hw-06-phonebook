{"version":3,"sources":["components/Filter/styles/filter.module.scss","components/Modal/styles/modal.module.scss","components/ContactList/styles/contactList.module.scss","redux/actions.js","components/Filter/Filter.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/ContactList/getVisibleContacts.js","components/Modal/Modal.js","App.js","redux/contactsReducer.js","redux/store.js","index.js","components/ContactForm/styles/contactForm.module.scss"],"names":["module","exports","addContact","createAction","deleteContact","handleFilter","Filter","value","useSelector","state","contacts","filter","dispatch","useDispatch","className","style","filterLabel","type","name","onChange","e","currentTarget","filterInput","ContactForm","onSave","useState","setName","number","setNumber","items","handleChange","resetForm","onSubmit","preventDefault","contact","id","uuidv4","cloneName","find","toLowerCase","alert","form","formLabel","pattern","title","required","formInput","ContactList","normalizeFilter","includes","getVisibleContacts","map","contactList_item","onClick","onDelete","modalRoot","document","querySelector","Modal","children","onClose","closeModalEscape","useCallback","code","useEffect","window","addEventListener","removeEventListener","createPortal","Modal__backdrop","target","Modal__content","App","showModal","setShowModal","toggleModal","itemsReducer","createReducer","payload","filterReducer","_","contactsReducer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","persistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","persistor","persistStore","ReactDOM","render","StrictMode","loading","getElementById"],"mappings":"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","file":"static/js/main.4d20d4b2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"filter_filterInput__C1Cdi\",\"filterLabel\":\"filter_filterLabel__7T-pT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal__backdrop\":\"modal_Modal__backdrop__1jJ6y\",\"Modal__content\":\"modal_Modal__content__fz9pQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList_item\":\"contactList_contactList_item__2clu3\"};","import {createAction} from \"@reduxjs/toolkit\";\n\n\nexport const addContact=createAction('contact/add');\n\nexport const deleteContact=createAction('contact/delete')\n\nexport const handleFilter=createAction('contact/filter');\n","import React from \"react\";\nimport style from './styles/filter.module.scss';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {handleFilter} from '../../redux/actions';\nimport PropTypes from 'prop-types'\n\n\nexport default function Filter () {\n\n    const value = useSelector(state => state.contacts.filter);\n\n    const dispatch=useDispatch();\n    const onChange=(e) => dispatch(handleFilter(e.currentTarget.value));\n\n    return (\n        <label className={style.filterLabel}>\n            Find contacts by name\n            <input type='text' name='filter' value={value} onChange={onChange} className={style.filterInput}/>\n        </label>\n    )\n}\n\nFilter.propTypes ={\n    value:PropTypes.string\n}","import React, {useState} from \"react\";\nimport {v4 as uuidv4} from \"uuid\";\nimport style from './styles/contactForm.module.scss';\nimport {addContact} from '../../redux/actions';\nimport {useDispatch, useSelector} from \"react-redux\";\n\nexport default function ContactForm({onSave}) {\n\n    const [name,setName]=useState('');\n    const [number,setNumber]=useState('')\n\n    const dispatch=useDispatch();\n    const onSubmit=(value) => dispatch(addContact(value));\n    const contacts=useSelector(state => state.contacts.items);\n\n    const handleChange = (e) => {\n        const {name,value}=e.currentTarget;\n\n      switch (name) {\n          case 'name' :\n              setName(value)\n              return;\n          case 'number' :\n              setNumber(value)\n              return;\n          default:return;\n      }\n    }\n\n\n\n   const handleSubmit =(e) => {\n        e.preventDefault();\n\n        const contact = {\n            id:uuidv4(),\n            name,\n            number\n        }\n\n       const cloneName= contacts.find(({name}) => contact.name.toLowerCase() === name.toLowerCase())\n\n       if(cloneName) {\n           const {name}=cloneName;\n           alert(`${name} is already in contacts`);\n           return;\n       }\n\n        onSubmit(contact);\n        onSave();\n        resetForm();\n\n    }\n\n    const resetForm =() => {\n        setName('');\n        setNumber('');\n    }\n\n\n    return (\n        <form onSubmit={handleSubmit} className={style.form}>\n            <label className={style.formLabel}>\n                Name\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    value={name}\n                    onChange={handleChange}\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                    required\n                    className={style.formInput}\n                />\n            </label>\n            <label className={style.formLabel}>\n                Number\n                <input\n                    type=\"tel\"\n                    name=\"number\"\n                    value={number}\n                    onChange={handleChange}\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                    required\n                    className={style.formInput}\n                />\n            </label>\n            <button type='submit'>Add contact</button>\n        </form>\n\n    )\n}\n\n","import React from \"react\";\nimport style from './styles/contactList.module.scss';\nimport {deleteContact} from '../../redux/actions';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getVisibleContacts} from \"./getVisibleContacts\";\nimport PropTypes from 'prop-types';\n\nexport default function ContactList()  {\n    const contacts=useSelector(({contacts:{filter,items}}) => getVisibleContacts(filter,items));\n    const dispatch=useDispatch();\n    const onDelete= id => dispatch(deleteContact(id));\n    return (\n        <ul>\n            {contacts.map(({id,name,number})=> (\n\n                <li key={id} className={style.contactList_item}>{name}: {number} <button onClick={() => onDelete(id)}>Delete</button></li>\n\n            ))}\n        </ul>\n    )\n}\n\nContactList.propTypes = {\n    contacts:PropTypes.arrayOf(PropTypes.shape({\n        id:PropTypes.string.isRequired,\n        name:PropTypes.string.isRequired,\n        number:PropTypes.string.isRequired\n    }))\n}","\nexport const getVisibleContacts =(filter,contacts) => {\n    const normalizeFilter=filter.toLowerCase();\n    return contacts.filter(contact => contact.name.toLowerCase().includes(normalizeFilter))\n\n}","import React, { useCallback, useEffect} from \"react\";\nimport {createPortal} from 'react-dom';\nimport style from './styles/modal.module.scss';\n\nconst modalRoot=document.querySelector('#modal-root')\n\nexport default function Modal({children,onClose}){\n\n    const closeModalEscape =useCallback((e) => {\n        if (e.code === \"Escape\") {\n            onClose();\n        }\n    },[onClose])\n\n\n    useEffect(()=> {\n        window.addEventListener('keydown', closeModalEscape);\n        return () =>{\n            window.removeEventListener('keydown', closeModalEscape)\n        }\n    },[closeModalEscape]);\n\n\n    const closeClickModal=(e) => {\n        if(e.target === e.currentTarget) {\n            onClose();\n        }\n    }\n\n    return createPortal(<div className={style.Modal__backdrop} onClick={closeClickModal}>\n        <div className={style.Modal__content}>{children}</div>\n    </div>,modalRoot)\n}\n","import React, {useState} from \"react\";\nimport Filter from \"./components/Filter\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Modal from \"./components/Modal\";\n\n\nexport default function App(){\n\n    const [showModal,setShowModal]=useState(false);\n\n\n   const toggleModal =() => {\n       setShowModal(!showModal);\n    }\n\n        return (\n            <div>\n                <button type='button' onClick={toggleModal}>Add contacts</button>\n                <h1>Phonebook</h1>\n                <h2>Contacts</h2>\n                <Filter/>\n                <ContactList/>\n                {showModal && <Modal onClose={toggleModal}><ContactForm onSave={toggleModal}/></Modal>}\n            </div>\n        )\n    }\n\n\n","import {combineReducers} from \"redux\";\nimport {createReducer} from \"@reduxjs/toolkit\";\nimport {addContact,deleteContact,handleFilter} from './actions'\n\nconst itemsReducer =createReducer([],{\n[addContact]:(state,{payload}) => [...state,payload],\n[deleteContact]:(state,{payload}) => state.filter(contact => contact.id !== payload)\n})\n\nconst filterReducer=createReducer('',{\n[handleFilter]:(_,{payload})=> payload\n})\n\n\nexport const contactsReducer=combineReducers({\n    items:itemsReducer,\n    filter:filterReducer\n})\n","import {contactsReducer} from './contactsReducer'\nimport {configureStore,getDefaultMiddleware} from \"@reduxjs/toolkit\";\nimport logger from 'redux-logger';\nimport { persistStore, persistReducer,\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\n\nconst middleware=[...getDefaultMiddleware({\n    serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n}),logger];\n\nconst persistConfig = {\n    key: 'items',\n    storage,\n    blacklist: ['filter']\n}\n\n\n\nconst store=configureStore({\n    reducer:{\n        contacts:persistReducer(persistConfig,contactsReducer)\n    },\n    middleware\n})\n\nconst persistor = persistStore(store)\n\nexport {store,persistor};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {store,persistor} from \"./redux/store\";\nimport {Provider} from \"react-redux\";\nimport { PersistGate } from 'redux-persist/integration/react'\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <PersistGate loading={null} persistor={persistor}>\n      <Provider store={store}>\n          <App />\n      </Provider>\n      </PersistGate>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"contactForm_form__Xf3UP\",\"formInput\":\"contactForm_formInput__1NWn0\",\"formLabel\":\"contactForm_formLabel__2YvUF\"};"],"sourceRoot":""}